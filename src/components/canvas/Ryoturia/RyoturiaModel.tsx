/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 E:\3D Design\Projects\2024\MIDI Input Test\web\MIDI to Keyframe - Piano Template - Web V3.glb -t 
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { animated, useSpring } from "@react-spring/three";
import { extend, useFrame } from "@react-three/fiber";
import { lerp } from "three/src/math/MathUtils";
import { easing } from "maath";
import { UserInputMap, Note, UserInputKeys } from "@/store/input";
import RyoturiaScreenMaterial from "./RyoturiaScreenMaterial";
import RyoturiaScreen from "./RyoturiaScreen";
import AnimatedPianoKey from "./AnimatedPianoKey";

type ModelKeyMap = {
  c: boolean;
  d: boolean;
  e: boolean;
  f: boolean;
  g: boolean;
  a: boolean;
  b: boolean;
  csharp: boolean;
  dsharp: boolean;
  fsharp: boolean;
  gsharp: boolean;
  asharp: boolean;
};

type Props = JSX.IntrinsicElements["group"] & {
  piano: ModelKeyMap;
  drumpad: ModelKeyMap;
  setInput: (key: UserInputKeys, input: boolean) => void;
};

type GLTFResult = GLTF & {
  nodes: {
    WhiteKeyC: THREE.Mesh;
    ["BlackKeyC#"]: THREE.Mesh;
    ["BlackKeyG#"]: THREE.Mesh;
    WhiteKeyD: THREE.Mesh;
    WhiteKeyE: THREE.Mesh;
    WhiteKeyF: THREE.Mesh;
    WhiteKeyG: THREE.Mesh;
    WhiteKeyA: THREE.Mesh;
    WhiteKeyB: THREE.Mesh;
    ["BlackKeyD#"]: THREE.Mesh;
    ["BlackKeyF#"]: THREE.Mesh;
    ["BlackKeyA#"]: THREE.Mesh;
    ScreenBorder: THREE.Mesh;
    CaseR3: THREE.Mesh;
    ScreenInside: THREE.Mesh;
    ButtonsC: THREE.Mesh;
    ["ButtonsC#"]: THREE.Mesh;
    ButtonsD: THREE.Mesh;
    ["ButtonsD#"]: THREE.Mesh;
    ButtonsE: THREE.Mesh;
    ButtonsF: THREE.Mesh;
    ["ButtonsF#"]: THREE.Mesh;
    ButtonsG: THREE.Mesh;
    ["ButtonsG#"]: THREE.Mesh;
    ButtonsA: THREE.Mesh;
    ["ButtonsA#"]: THREE.Mesh;
    ButtonsB: THREE.Mesh;
    Buttons013: THREE.Mesh;
    Buttons014: THREE.Mesh;
  };
  materials: {
    ["PianoKey.White"]: THREE.MeshStandardMaterial;
    ["PianoKey.Black"]: THREE.MeshStandardMaterial;
    ["Piano.Screen.Border"]: THREE.MeshStandardMaterial;
    PianoCase: THREE.MeshStandardMaterial;
    ["Piano.Screen.Inside"]: THREE.MeshStandardMaterial;
    ["Button.DynamicText.001"]: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[];
};

export function RyoturiaModel({ piano, drumpad, setInput, ...props }: Props) {
  const { nodes, materials } = useGLTF(
    "/models/MIDI to Keyframe - Piano Template - Web V5.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <AnimatedPianoKey
        geometry={nodes.WhiteKeyC.geometry}
        material={materials["PianoKey.White"].clone()}
        position={[-0.488, 0.901, -5.421]}
        pressed={piano.c}
        note="C4"
        setInput={setInput}
      />
      <AnimatedPianoKey
        geometry={nodes["BlackKeyC#"].geometry}
        material={materials["PianoKey.Black"].clone()}
        position={[-0.096, 1.014, -5.417]}
        pressed={piano.csharp}
        black
        note="C#4"
        setInput={setInput}
      />
      <AnimatedPianoKey
        geometry={nodes["BlackKeyG#"].geometry}
        material={materials["PianoKey.Black"].clone()}
        position={[4.304, 1.014, -5.417]}
        pressed={piano.gsharp}
        black
        note="G#4"
        setInput={setInput}
      />
      <AnimatedPianoKey
        geometry={nodes.WhiteKeyD.geometry}
        material={materials["PianoKey.White"].clone()}
        position={[0.578, 0.901, -5.421]}
        pressed={piano.d}
        setInput={setInput}
        note="D4"
      />
      <AnimatedPianoKey
        geometry={nodes.WhiteKeyE.geometry}
        material={materials["PianoKey.White"].clone()}
        position={[1.644, 0.901, -5.421]}
        pressed={piano.e}
        setInput={setInput}
        note="E4"
      />
      <AnimatedPianoKey
        geometry={nodes.WhiteKeyF.geometry}
        material={materials["PianoKey.White"].clone()}
        position={[2.71, 0.901, -5.421]}
        pressed={piano.f}
        setInput={setInput}
        note="F4"
      />
      <AnimatedPianoKey
        geometry={nodes.WhiteKeyG.geometry}
        material={materials["PianoKey.White"].clone()}
        position={[3.775, 0.901, -5.421]}
        pressed={piano.g}
        setInput={setInput}
        note="G4"
      />
      <AnimatedPianoKey
        geometry={nodes.WhiteKeyA.geometry}
        material={materials["PianoKey.White"].clone()}
        position={[4.841, 0.901, -5.421]}
        pressed={piano.a}
        setInput={setInput}
        note="A4"
      />
      <AnimatedPianoKey
        geometry={nodes.WhiteKeyB.geometry}
        material={materials["PianoKey.White"].clone()}
        position={[5.907, 0.901, -5.421]}
        pressed={piano.b}
        setInput={setInput}
        note="B4"
      />
      <AnimatedPianoKey
        geometry={nodes["BlackKeyD#"].geometry}
        material={materials["PianoKey.Black"].clone()}
        position={[1.111, 1.014, -5.417]}
        pressed={piano.dsharp}
        black
        setInput={setInput}
        note="D#4"
      />
      <AnimatedPianoKey
        geometry={nodes["BlackKeyF#"].geometry}
        material={materials["PianoKey.Black"].clone()}
        position={[3.217, 1.014, -5.417]}
        pressed={piano.fsharp}
        black
        setInput={setInput}
        note="F#4"
      />
      <AnimatedPianoKey
        geometry={nodes["BlackKeyA#"].geometry}
        material={materials["PianoKey.Black"].clone()}
        position={[5.357, 1.014, -5.417]}
        pressed={piano.asharp}
        black
        setInput={setInput}
        note="A#4"
      />
      <mesh
        geometry={nodes.ScreenBorder.geometry}
        material={materials["Piano.Screen.Border"]}
        position={[2.815, 1.423, -8.023]}
      />
      <mesh
        geometry={nodes.CaseR3.geometry}
        material={materials.PianoCase}
        position={[-0.682, 1.109, -2.962]}
      />
      <RyoturiaScreen
        geometry={nodes.ScreenInside.geometry}
        position={[2.815, 1.414, -8.023]}
        scale={0.991}
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes.ButtonsC.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.c}
        setInput={setInput}
        note="C5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes["ButtonsC#"].geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.csharp}
        setInput={setInput}
        note="C#5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes.ButtonsD.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.d}
        setInput={setInput}
        note="D5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes["ButtonsD#"].geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.dsharp}
        setInput={setInput}
        note="D#5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes.ButtonsE.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.e}
        setInput={setInput}
        note="E5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes.ButtonsF.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.f}
        setInput={setInput}
        note="F5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes["ButtonsF#"].geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.fsharp}
        setInput={setInput}
        note="F#5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes.ButtonsG.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.g}
        setInput={setInput}
        note="G5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes["ButtonsG#"].geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.gsharp}
        setInput={setInput}
        note="G#5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes.ButtonsA.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.a}
        setInput={setInput}
        note="A5"
      />
      <AnimatedPianoKey
        drumpad
        geometry={nodes["ButtonsA#"].geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
        pressed={drumpad.asharp}
        setInput={setInput}
        note="A#5"
      />
      <mesh
        geometry={nodes.ButtonsB.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
      />
      <mesh
        geometry={nodes.Buttons013.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
      />
      <mesh
        geometry={nodes.Buttons014.geometry}
        material={materials["Button.DynamicText.001"].clone()}
        position={[-0.518, 1.453, -6.839]}
      />
    </group>
  );
}

export default RyoturiaModel;

useGLTF.preload("/models/MIDI to Keyframe - Piano Template - Web V5.glb");
